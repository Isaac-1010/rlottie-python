name: Build and upload to PyPI

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  release:
    types:
      - published

jobs:
  build_wheels_win:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: laggykiller/cibuildwheel@v2.14.1-win-arm64
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_WINDOWS: AMD64 x86 ARM64
          # If enable stubgen (pyproject.toml), then requires mypy which depends on typed-ast
          # typed-ast cannot run on pypy <3.8
          # https://mypy.readthedocs.io/en/stable/faq.html
          # CIBW_SKIP: pp37-*

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_wheels_mac:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: laggykiller/cibuildwheel@v2.14.1-win-arm64
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          # If enable stubgen (pyproject.toml), then requires mypy which depends on typed-ast
          # typed-ast cannot run on pypy <3.8
          # https://mypy.readthedocs.io/en/stable/faq.html
          # CIBW_SKIP: pp37-*

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_wheels_linux_arm:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: laggykiller/cibuildwheel@v2.14.1-win-arm64
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_LINUX: x86_64 i686 aarch64
          # If enable stubgen (pyproject.toml), then requires mypy which depends on typed-ast
          # typed-ast cannot run on pypy <3.8
          # https://mypy.readthedocs.io/en/stable/faq.html
          # CIBW_SKIP: pp37-*

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_linux_ppc64le:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: laggykiller/cibuildwheel@v2.14.1-win-arm64
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_LINUX: x86_64 ppc64le
          # If enable stubgen (pyproject.toml), then requires mypy which depends on typed-ast
          # typed-ast cannot run on pypy <3.8
          # https://mypy.readthedocs.io/en/stable/faq.html
          # CIBW_SKIP: pp37-*

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_wheels_linux_s390x:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build wheels
        uses: laggykiller/cibuildwheel@v2.14.1-win-arm64
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_LINUX: x86_64 s390x
          # If enable stubgen (pyproject.toml), then requires mypy which depends on typed-ast
          # typed-ast cannot run on pypy <3.8
          # https://mypy.readthedocs.io/en/stable/faq.html
          # CIBW_SKIP: pp37-*

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi_test:
    needs: [build_wheels_x86, build_wheels_arm, build_wheels_ppc64le, build_wheels_s390x, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_wheels_x86, build_wheels_arm, build_wheels_ppc64le, build_wheels_s390x, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}